---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbtools
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: qbittorrent
      namespace: nzb
  values:
    controllers:
      tagging:
        type: cronjob
        cronjob: &cronJobSpec
          schedule: "@hourly"
          timeZone: &timeZone "Europe/Paris"
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        initContainers:
          tagging:
            image: &image
              repository: ghcr.io/buroa/qbtools
              tag: v0.15.3@sha256:68c211301e88ae942629cf05793f860675467aac5cdc7b7500b394f294f62eac
            env: &env
              TZ: *timeZone
            args: [
              "tagging",
              "--added-on",
              "--expired",
              "--last-activity",
              "--sites",
              "--unregistered",
              "--server", "qbittorrent.nzb.svc.cluster.local",
              "--port", "80",
              "--config", "/config/config.yaml"
            ]
            resources: &resources
              requests:
                cpu: 25m
              limits:
                memory: 256M
        containers:
          unregistered:
            image: *image
            env: *env
            args: [
              "prune",
              "--exclude-category", "manual",
              "--exclude-category", "music",
              "--exclude-category", "music.import",
              "--include-tag", "unregistered",
              # "--dry-run",
              "--server", "qbittorrent.nzb.svc.cluster.local",
              "--port", "80"
            ]
            resources: *resources
          expired:
            image: *image
            env: *env
            args: [
              "prune",
              "--exclude-category", "manual",
              "--exclude-category", "music",
              "--exclude-category", "music.import",
              "--exclude-category", "overlord",
              "--include-tag", "expired", # defined in config.yaml
              "--include-tag", "added:7d",
              # "--dry-run",
              "--server", "qbittorrent.nzb.svc.cluster.local",
              "--port", "80"
            ]
            resources: *resources
        pod:
          restartPolicy: OnFailure
          securityContext: &securityContext
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
      orphaned:
        type: cronjob
        cronjob:
          <<: *cronJobSpec
          schedule: "@daily"
        containers:
          app:
            image: *image
            env: *env
            args: [
              "orphaned",
              "--exclude-pattern", "*_unpackerred*",
              "--exclude-pattern", "*/manual/*",
              "--exclude-pattern", "*/music.import/*",
              # "--dry-run",
              "--server", "qbittorrent.nzb.svc.cluster.local",
              "--port", "80"
            ]
            resources: *resources
        pod:
          restartPolicy: OnFailure
          securityContext: *securityContext
      reannounce:
        containers:
          app:
            image: *image
            env: *env
            args: [
              "reannounce",
              "--process-seeding",
              "--server", "qbittorrent.nzb.svc.cluster.local",
              "--port", "80"
            ]
            resources: *resources
        pod:
          securityContext: *securityContext
    persistence:
      secret-file:
        type: secret
        name: qbtools-secret
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
      media:
        type: nfs
        server: "10.10.10.20"
        path: /volume2/Media
        advancedMounts:
          orphaned:
            app:
              - path: /media
